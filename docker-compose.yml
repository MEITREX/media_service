version: "3"
services:
  minio:
    image: quay.io/minio/minio:latest
    command: server --console-address ":3011" /miniodata
    ports:
      - "3010:9000"
      - "3011:3011"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_NOTIFY_WEBHOOK_ENABLE_onObjectCreated: "on"
      MINIO_NOTIFY_WEBHOOK_ENDPOINT_onObjectCreated: http://app-media:3001/webhook/on-minio-object-create
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    hostname: minio
    volumes:
      - miniodata:/data
  #nginx-media:
  #  image: nginx:1.24-alpine
  #  hostname: nginx
  #  volumes:
  #    # ../media_service is necessary because otherwise docker-compose overrides the context when merging multiple docker-compose.yml files
  #    - ./../media_service/nginx.conf:/etc/nginx/nginx.conf:ro
  #  ports:
  #    - "3010:9000"
  #    - "3011:9090"
  #  depends_on:
  #    - minio
  database:
    image: pgvector/pgvector:pg16
    command: -c 'max_connections=500'
    restart: unless-stopped
    expose:
      - 5432
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./../media_service/pg-init-scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_CREATE_DB_MEDIA_SERVICE=media_service
  app-media:
    build:
      context: ./../media_service/ # necessary because otherwise docker-compose overrides the context when merging multiple docker-compose.yml files
    restart: unless-stopped
    container_name: media_service
    expose:
      - 3000
      - 3001
    ports:
      - "3000:3000"
      - "3001:3001"
    depends_on:
      - database
      - minio
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/media_service
      MINIO_URL: http://minio
      MINIO_PORT: 9000
      MINIO_EXTERNAL_URL: http://localhost
      MINIO_EXTERNAL_PORT: 3010
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      MINIO_ACCESS_KEY: minioadmin
      MINIO_ACCESS_SECRET: minioadmin
  dapr-media:
    image: "daprio/daprd"
    command: [
      "./daprd",
      "--app-id", "media_service",
      "--app-port", "3001",
      "--dapr-http-port", "3000",
      "--resources-path", "./components"
    ]
    volumes:
      - "./../media_service/components/:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    depends_on:
      - app-media
      - redis
    network_mode: "service:app-media"
  redis:
    image: "redis:alpine"
    expose:
      - "6379"
volumes:
  miniodata:
  dbdata:
  testdata:
networks:
  default:
    name: dapr-network
    external: true